/**
 * üìé –ò—Å—Ç–æ—á–Ω–∏–∫: https://chatgpt.com/c/67e42177-85b0-8010-b16f-24a78c767e41
 *
 * updateStatsPanel v2.3 (26.03.2025)
 *
 * üìä –õ–æ–≥ –≤ "–õ–æ–≥ —Å–∫—Ä–∏–ø—Ç–æ–≤" ‚Äî –∞–≤—Ç–æ–¥–µ—Ç–µ–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ (—Ä—É—á–Ω–æ–π/—Ç—Ä–∏–≥–≥–µ—Ä), –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–≤–µ—Ä—Ö—É
 */

function updateStatsPanel(e) {
  const isTrigger = typeof e === "object" && e !== null;
  const triggerType = isTrigger ? "–∞–≤—Ç–æ" : "—Ä—É—á–Ω–æ–π";

  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = ss.getSheetByName("404 (–Ω–µ –º–µ–Ω—è—Ç—å!)");
  const logSheetName = "–õ–æ–≥ —Å–∫—Ä–∏–ø—Ç–æ–≤";
  let logSheet = ss.getSheetByName(logSheetName);

  if (!logSheet) {
    logSheet = ss.insertSheet(logSheetName);
    logSheet.getRange("G6:K6").setValues([["–î–∞—Ç–∞", "–í—Ä–µ–º—è", "–ó–∞–ø—É—Å–∫", "–°—Ç–∞—Ç—É—Å", "–û—à–∏–±–∫–∞"]]);
  }

  const logStartRow = 7;
  const logStartCol = 7; // G
  const now = new Date();
  const date = Utilities.formatDate(now, ss.getSpreadsheetTimeZone(), "yyyy-MM-dd");
  const time = Utilities.formatDate(now, ss.getSpreadsheetTimeZone(), "HH:mm:ss");

  try {
    const codes = sheet.getRange("D7:D").getValues().flat().filter(Boolean);
    const status = codes.length > 0 ? "—É—Å–ø–µ—à–Ω–æ" : "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö";

    overwriteTopAndShift(logSheet, logStartRow, [date, time, triggerType, status, ""]);
  } catch (e) {
    overwriteTopAndShift(logSheet, logStartRow, [date, time, triggerType, "–æ—à–∏–±–∫–∞", String(e)]);
  }
}

// –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤–µ—Ä—Ö–Ω—é—é —Å—Ç—Ä–æ–∫—É –∏ —Å–º–µ—â–∞–µ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–Ω–∏–∑ –≤—Ä—É—á–Ω—É—é
function overwriteTopAndShift(sheet, startRow, rowData) {
  const range = sheet.getRange(startRow, 7, sheet.getMaxRows() - startRow + 1, rowData.length);
  const values = range.getValues();
  values.unshift(rowData); // –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –Ω–∞—á–∞–ª–æ
  values.pop(); // —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —á—Ç–æ–±—ã –Ω–µ –≤—ã–ª–µ–∑–∞–ª–æ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
  range.setValues(values);
}

function findFirstEmptyRow(sheet, col, startRow) {
  const values = sheet.getRange(startRow, col, sheet.getMaxRows() - startRow + 1).getValues();
  for (let i = 0; i < values.length; i++) {
    if (!values[i][0]) return startRow + i;
  }
  return sheet.getMaxRows() + 1;
}

/**
 * üõ† –õ–æ–≥ –¥–æ—Ä–∞–±–æ—Ç–æ–∫:
 * v1.0 ‚Äì –Ω–∞—á–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * v1.5 ‚Äì –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –≤–∫–ª–∞–¥–∫—É
 * v1.6 ‚Äì –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–æ–≥ (–≤—Ä–µ–º—è, –∑–∞–ø—É—Å–∫, —Å—Ç–∞—Ç—É—Å)
 * v1.7 ‚Äì –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ –æ—à–∏–±–∫–∏
 * v1.8 ‚Äì —Å–≤–µ–∂–∏–µ –ª–æ–≥–∏ —Å–≤–µ—Ä—Ö—É (–≤—Å—Ç–∞–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏)
 * v1.9 ‚Äì —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
 * v2.0 ‚Äì –æ—Ç–º–µ–Ω–µ–Ω–∞ –≤—Å—Ç–∞–≤–∫–∞ —Å—Ç—Ä–æ–∫, –∑–∞–ø–∏—Å—å –ª–æ–≥–æ–≤ –≤ –ø–µ—Ä–≤—É—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
 * v2.1 ‚Äì —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤—Å—Ç–∞–≤–∫–∞ —Å–≤–µ—Ä—Ö—É –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫ –≤–Ω–∏–∑—É
 * v2.2 ‚Äì –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –≤–µ—Ä—Ö–Ω–µ–π —Å—Ç—Ä–æ–∫–∏ –∏ —Å–¥–≤–∏–≥ –≤—Å–µ—Ö –≤–Ω–∏–∑ –≤—Ä—É—á–Ω—É—é (–±–µ–∑ –≤—Å—Ç–∞–≤–∫–∏)
 * v2.3 ‚Äì –∞–≤—Ç–æ–¥–µ—Ç–µ–∫—Ü–∏—è —Ä—É—á–Ω–æ–≥–æ –∏–ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (e)
 */
