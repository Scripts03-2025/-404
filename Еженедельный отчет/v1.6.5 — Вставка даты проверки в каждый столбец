/**
 * –°–∫—Ä–∏–ø—Ç: updateWeeklyStats_All
 * –ò—Å—Ç–æ—á–Ω–∏–∫: https://chatgpt.com/c/67e6c8e4-bbc8-8010-a819-2d00335dd323
 *
 * üìå –í–µ—Ä—Å–∏–∏:
 * v1.6.5 ‚Äî –í—Å—Ç–∞–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –∫–∞–∂–¥—ã–π —Å—Ç–æ–ª–±–µ—Ü
 * v1.6.4 ‚Äî –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –Ω–µ–¥–µ–ª—å + –≤—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–π –Ω–µ–¥–µ–ª–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
 * v1.6.3 ‚Äî –í—Å—Ç–∞–≤–∫–∞ —Å—Ä–∞–∑—É –≤—Å–µ—Ö –Ω—É–∂–Ω—ã—Ö –Ω–µ–¥–µ–ª—å, —Å–¥–≤–∏–≥ —Å—Ç–æ–ª–±—Ü–æ–≤
 * v1.6.2 ‚Äî –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –º–µ–Ω—å—à–µ get/set, —É—Å–∫–æ—Ä–µ–Ω–∏–µ
 * v1.6.1 ‚Äî –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –Ω–µ–¥–µ–ª—å –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –º–µ—Å—è—Ü–∞
 * v1.6.0 ‚Äî –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ "–í –¢–æ–ø-10..." –∏ –ª–æ–≥–∏–∫–∞ "–Ω–µ—Ç –∏–Ω—Ñ—ã"
 */

function updateWeeklyStats_All() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sourceSheet = ss.getSheetByName("–ù–∏—à–∏ 2.0");
  const statSheet = ss.getSheetByName("s5 –°—Ç–∞—Ç–∞");
  const timezone = ss.getSpreadsheetTimeZone();

  const standardParams = [
    { name: "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", column: "H" },
    { name: "–ù–∞–ø–∏—Å–∞–Ω–æ", column: "AG" },
    { name: "–ó–∞–ø—É—â–µ–Ω–æ –≤ —Ä–∞–±–æ—Ç—É", column: "D" }
  ];

  const top10Params = [
    { name: "–í –¢–æ–ø-10 —è–Ω–¥–µ–∫—Å–∞", column: "K" },
    { name: "–í –¢–æ–ø-10 —è–Ω–¥–µ–∫—Å–∞ —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏", column: "L" },
    { name: "–í –¢–æ–ø-10 Google —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü", column: "M" }
  ];

  const paramStartRow = 8;
  const lastRow = statSheet.getLastRow();
  const paramNames = statSheet.getRange(paramStartRow, 2, lastRow - paramStartRow + 1).getValues().flat();
  const today = new Date();

  const getWeekStart = (date) => {
    const d = new Date(date);
    d.setDate(d.getDate() - d.getDay() + 1);
    d.setHours(0, 0, 0, 0);
    return d;
  };
  const formatDateShort = date => Utilities.formatDate(date, timezone, "dd");
  const formatDateFull = date => Utilities.formatDate(date, timezone, "dd.MM.yy");
  const formatDateTime = date => Utilities.formatDate(date, timezone, "dd.MM.yyyy HH:mm");

  const getWeekLabel = (startDate) => {
    const endDate = new Date(startDate);
    endDate.setDate(startDate.getDate() + 6);
    return `${formatDateShort(startDate)}‚Äì${formatDateFull(endDate)}`;
  };

  const applyWeekStyle = (cellRange, startDate) => {
    cellRange.setFontWeight("bold");
    const endDate = new Date(startDate);
    endDate.setDate(startDate.getDate() + 6);
    if (startDate.getMonth() !== endDate.getMonth()) {
      cellRange.setBackground("#b6d7a8");
    } else {
      cellRange.setBackground(null);
    }
  };

  const currentWeekStart = getWeekStart(today);
  const currentLabel = getWeekLabel(currentWeekStart);
  const headers = statSheet.getRange(7, 3, 1, statSheet.getLastColumn()).getValues()[0];

  const currentLabelCol = headers.indexOf(currentLabel);
  if (currentLabelCol === -1) {
    statSheet.insertColumnBefore(3);
    const headerCell = statSheet.getRange(7, 3);
    headerCell.setValue(currentLabel);
    applyWeekStyle(headerCell, currentWeekStart);
  }

  const sourceData = sourceSheet.getDataRange().getValues();
  const maxWeeksToUpdate = 5;
  const headerRange = statSheet.getRange(7, 3, 1, statSheet.getLastColumn() - 2).getValues()[0];

  const checkRowIndex = paramNames.findIndex(name => name === "–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏");
  const checkRow = checkRowIndex !== -1 ? paramStartRow + checkRowIndex : null;

  for (let i = 0; i < Math.min(maxWeeksToUpdate, headerRange.length); i++) {
    const label = headerRange[i];
    if (!label || typeof label !== 'string' || !label.includes("‚Äì")) continue;
    const parts = label.split("‚Äì");
    const startDay = parseInt(parts[0], 10);
    const endPart = parts[1];
    const [endDay, endMonth, endYear] = endPart.split(".").map(x => parseInt(x, 10));
    const weekStart = new Date(endYear + 2000, endMonth - 1, startDay);
    const weekEnd = new Date(weekStart);
    weekEnd.setDate(weekStart.getDate() + 6);
    const col = 3 + i;

    [...standardParams, ...top10Params].forEach(param => {
      const rowIndex = paramNames.findIndex(name => name === param.name);
      if (rowIndex === -1) return;
      const row = paramStartRow + rowIndex;
      let count = 0;

      for (let r = 1; r < sourceData.length; r++) {
        const line = sourceData[r];
        const rawValue = line[getColIndex(param.column)];
        let compareDate = line[getColIndex("H")];

        if (standardParams.some(p => p.name === param.name)) {
          compareDate = rawValue;
          if (!(compareDate instanceof Date)) continue;
        } else {
          if (rawValue !== 1 && rawValue !== "1") continue;
          if (!(compareDate instanceof Date)) continue;
        }

        const d = new Date(compareDate);
        d.setHours(0, 0, 0, 0);
        if (d >= weekStart && d <= weekEnd) {
          count++;
        }
      }

      const value = (top10Params.some(p => p.name === param.name) && count === 0) ? "–Ω–µ—Ç –∏–Ω—Ñ—ã" : count;
      statSheet.getRange(row, col).setValue(value);
    });

    // –í—Å—Ç–∞–≤–∫–∞ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–æ–ª–±–µ—Ü
    if (checkRow) {
      statSheet.getRange(checkRow, col).setValue(formatDateTime(today));
    }
  }

  function getColIndex(colLetter) {
    return colLetter.charCodeAt(0) - 65;
  }

  /**
   * üìò –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å–∫—Ä–∏–ø—Ç–∞ updateWeeklyStats_All:
   *
   * ‚ñ∏ –°–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –¥–≤—É–º—è –ª–∏—Å—Ç–∞–º–∏:
   *   - "–ù–∏—à–∏ 2.0" ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
   *   - "s5 –°—Ç–∞—Ç–∞" ‚Äî —Ç–∞–±–ª–∏—Ü–∞ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
   *
   * ‚ñ∏ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
   *   - "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", "–ù–∞–ø–∏—Å–∞–Ω–æ", "–ó–∞–ø—É—â–µ–Ω–æ –≤ —Ä–∞–±–æ—Ç—É" ‚Äî –±–µ—Ä—É—Ç—Å—è –ø–æ –¥–∞—Ç–∞–º
   *   - "–í –¢–æ–ø-10..." ‚Äî —Å—á–∏—Ç–∞—é—Ç—Å—è, –µ—Å–ª–∏ –≤ —è—á–µ–π–∫–µ —Å—Ç–æ–ª–±—Ü–∞ K/L/M —Å—Ç–æ–∏—Ç 1, –∏ –¥–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤—Ö–æ–¥–∏—Ç –≤ –Ω—É–∂–Ω—É—é –Ω–µ–¥–µ–ª—é
   *
   * ‚ñ∏ –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:
   *   - –ï—Å–ª–∏ —Å–≤–µ–∂–∞—è –Ω–µ–¥–µ–ª—è –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ ‚Äî –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å—Ç–æ–ª–±–µ—Ü C, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–¥–≤–∏–≥–∞—é—Ç—Å—è
   *   - –í—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –Ω–µ–¥–µ–ª—å
   *   - –ó–Ω–∞—á–µ–Ω–∏–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ –¥–∞—Ç–µ: –µ—Å–ª–∏ –¥–∞—Ç–∞ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω –Ω–µ–¥–µ–ª–∏, —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤ –æ—Ç—á—ë—Ç
   *
   * ‚ñ∏ –§–æ—Ä–º–∞—Ç –Ω–µ–¥–µ–ª–∏:
   *   - –Ø—á–µ–π–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ 7 (–∑–∞–≥–æ–ª–æ–≤–æ–∫) –∏–º–µ–µ—Ç —Ñ–æ—Ä–º–∞—Ç: 01‚Äì07.03.25
   *   - –ï—Å–ª–∏ –Ω–µ–¥–µ–ª—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ –æ–¥–Ω–æ–º –º–µ—Å—è—Ü–µ, –∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º ‚Äî –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è –∑–µ–ª—ë–Ω—ã–º
   *
   * ‚ñ∏ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
   *   - –í —Å—Ç—Ä–æ–∫—É "–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏" –≤ –∫–∞–∂–¥—É—é –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –∫–æ–ª–æ–Ω–∫—É –ø–∏—à–µ—Ç—Å—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–¥.–ú–ú.–≥–≥–≥–≥ —á—á:–º–º"
   */
}
